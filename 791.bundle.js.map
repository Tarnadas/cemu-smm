{"version":3,"sources":["webpack://smmdb-lib-example/../pkg/smmdb_bg.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","takeObject","ret","dropObject","passArray8ToWasm0","cachegetUint32Memory0","getArrayJsValueFromWasm0","Uint32Array","result","i","getArrayU8FromWasm0","isLikeNone","x","setupPanicHook","Course","Object","create","prototype","this","ptr0","len0","__wrap","course","retptr","r0","r1","v1","v0","Course2","thumb","ptr1","len1","data","is_encrypted","Thumbnail2","bytes","__wbindgen_json_parse","arg0","arg1","JSON","parse","__wbindgen_json_serialize","stringify","__wbindgen_object_drop_ref","__wbindgen_string_new","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_throw","__wbindgen_rethrow"],"mappings":"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","file":"791.bundle.js","sourcesContent":["import * as wasm from './smmdb_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n*r\" Setup panic hook for WebAssembly calls.\n*r\" This will forward Rust panics to console.error\n*/\nexport function setupPanicHook() {\n    wasm.setupPanicHook();\n}\n\n/**\n* Super Mario Maker course file.\n*\n* This struct is a wrapper to hold a [SMMCourse](crate::proto::SMMCourse) struct which can be serialized via Protocol Buffer.\n*/\nexport class Course {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Course.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_course_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} buffer\n    * @returns {Course}\n    */\n    static from_proto(buffer) {\n        var ptr0 = passArray8ToWasm0(buffer, wasm.__wbindgen_export_0);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.course_from_proto(ptr0, len0);\n        return Course.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} buffer\n    * @returns {Course}\n    */\n    static from_boxed_proto(buffer) {\n        var ptr0 = passArray8ToWasm0(buffer, wasm.__wbindgen_export_0);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.course_from_boxed_proto(ptr0, len0);\n        return Course.__wrap(ret);\n    }\n    /**\n    * @param {any} course\n    * @returns {Course}\n    */\n    static from_js(course) {\n        var ret = wasm.course_from_js(addHeapObject(course));\n        return Course.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} buffer\n    * @returns {any[]}\n    */\n    static from_packed_js(buffer) {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            var ptr0 = passArray8ToWasm0(buffer, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.course_from_packed_js(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    into_proto() {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            wasm.course_into_proto(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @returns {any}\n    */\n    into_js() {\n        var ret = wasm.course_into_js(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class Course2 {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Course2.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_course2_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} buffer\n    * @param {Uint8Array | undefined} thumb\n    * @returns {Course2}\n    */\n    static fromProto(buffer, thumb) {\n        var ptr0 = passArray8ToWasm0(buffer, wasm.__wbindgen_export_0);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(thumb) ? 0 : passArray8ToWasm0(thumb, wasm.__wbindgen_export_0);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.course2_fromProto(ptr0, len0, ptr1, len1);\n        return Course2.__wrap(ret);\n    }\n    /**\n    * @param {any} course\n    * @param {Uint8Array | undefined} thumb\n    * @returns {Course2}\n    */\n    static fromObject(course, thumb) {\n        var ptr0 = isLikeNone(thumb) ? 0 : passArray8ToWasm0(thumb, wasm.__wbindgen_export_0);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.course2_fromObject(addHeapObject(course), ptr0, len0);\n        return Course2.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} buffer\n    * @returns {any[]}\n    */\n    static fromBytes(buffer) {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            var ptr0 = passArray8ToWasm0(buffer, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.course2_fromBytes(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    getProto() {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            wasm.course2_getProto(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @param {Uint8Array} course\n    */\n    static decrypt(course) {\n        try {\n            var ptr0 = passArray8ToWasm0(course, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.course2_decrypt(ptr0, len0);\n        } finally {\n            course.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_export_3(ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @param {Uint8Array} course\n    * @returns {Uint8Array}\n    */\n    static encrypt(course) {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            var ptr0 = passArray8ToWasm0(course, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.course2_encrypt(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {Uint8Array | undefined} thumb\n    * @param {boolean} is_encrypted\n    * @returns {Course2}\n    */\n    static from_switch_files(data, thumb, is_encrypted) {\n        try {\n            var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            var ptr1 = isLikeNone(thumb) ? 0 : passArray8ToWasm0(thumb, wasm.__wbindgen_export_0);\n            var len1 = WASM_VECTOR_LEN;\n            var ret = wasm.course2_from_switch_files(ptr0, len0, ptr1, len1, is_encrypted);\n            return Course2.__wrap(ret);\n        } finally {\n            data.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_export_3(ptr0, len0 * 1);\n        }\n    }\n}\n/**\n*/\nexport class Thumbnail2 {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Thumbnail2.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_thumbnail2_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {Thumbnail2}\n    */\n    static new(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_export_0);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.thumbnail2_new(ptr0, len0);\n        return Thumbnail2.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {Thumbnail2}\n    */\n    static fromDecrypted(bytes) {\n        var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_export_0);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.thumbnail2_fromDecrypted(ptr0, len0);\n        return Thumbnail2.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {Uint8Array}\n    */\n    static encrypt(bytes) {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.thumbnail2_encrypt(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @param {Uint8Array} bytes\n    */\n    static decrypt(bytes) {\n        try {\n            var ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_export_0);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.thumbnail2_decrypt(ptr0, len0);\n        } finally {\n            bytes.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_export_3(ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    getEncrypted() {\n        try {\n            var ptr = this.ptr;\n            this.ptr = 0;\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            wasm.thumbnail2_getEncrypted(retptr, ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    getJpeg() {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            wasm.thumbnail2_getJpeg(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    getJpegNoOpt() {\n        try {\n            const retptr = wasm.__wbindgen_export_2.value - 16;\n            wasm.__wbindgen_export_2.value = retptr;\n            wasm.thumbnail2_getJpegNoOpt(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_export_3(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_2.value += 16;\n        }\n    }\n    /**\n    */\n    optimizeJpeg() {\n        wasm.thumbnail2_optimizeJpeg(this.ptr);\n    }\n}\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_export_3(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n"],"sourceRoot":""}